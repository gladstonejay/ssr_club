<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miniclass.dao.ExamDao" >
  <resultMap id="BaseResultMap" type="com.miniclass.entity.Exam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="A" property="a" jdbcType="VARCHAR" />
    <result column="B" property="b" jdbcType="VARCHAR" />
    <result column="C" property="c" jdbcType="VARCHAR" />
    <result column="D" property="d" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="answer_context" property="answerContext" jdbcType="VARCHAR" />
    <result column="star" property="star" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, title, item_id, context, A, B, C, D, answer, answer_context, star, 
    type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.Exam" >
    insert into exam (id, order_id, title, 
      item_id, context, A, 
      B, C, D, answer, 
      answer_context, star, type
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{itemId,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, #{a,jdbcType=VARCHAR}, 
      #{b,jdbcType=VARCHAR}, #{c,jdbcType=VARCHAR}, #{d,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, 
      #{answerContext,jdbcType=VARCHAR}, #{star,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="a != null" >
        A,
      </if>
      <if test="b != null" >
        B,
      </if>
      <if test="c != null" >
        C,
      </if>
      <if test="d != null" >
        D,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="answerContext != null" >
        answer_context,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="a != null" >
        #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null" >
        #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        #{d,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="answerContext != null" >
        #{answerContext,jdbcType=VARCHAR},
      </if>
      <if test="star != null" >
        #{star,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.Exam" >
    update exam
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="a != null" >
        A = #{a,jdbcType=VARCHAR},
      </if>
      <if test="b != null" >
        B = #{b,jdbcType=VARCHAR},
      </if>
      <if test="c != null" >
        C = #{c,jdbcType=VARCHAR},
      </if>
      <if test="d != null" >
        D = #{d,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="answerContext != null" >
        answer_context = #{answerContext,jdbcType=VARCHAR},
      </if>
      <if test="star != null" >
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.Exam" >
    update exam
    set order_id = #{orderId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      context = #{context,jdbcType=VARCHAR},
      A = #{a,jdbcType=VARCHAR},
      B = #{b,jdbcType=VARCHAR},
      C = #{c,jdbcType=VARCHAR},
      D = #{d,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      answer_context = #{answerContext,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllExam" resultMap="BaseResultMap" >
    select * from exam where item_id = 1
    AND type=#{type}
    order by order_id;
  </select>
  <select id="getOneExam" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from exam
    where order_id = #{orderId}
    and type = #{type}
    order by item_id;
  </select>
  <select id="getOneExamContext" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from exam
    where order_id = #{orderId}
    and item_id = #{ itemId}
    and type = #{type};
  </select>

</mapper>