<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miniclass.dao.UserRecordDao" >
  <resultMap id="BaseResultMap" type="com.miniclass.entity.UserRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="mid" property="mid" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="DATE" />
      <result column="month" property="month" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, type, mid, date,month
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_record
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="isRecord" resultType="int" parameterType="com.miniclass.entity.UserRecord" >
        select count(*) from user_record
        where user_id = #{ userId,jdbcType=INTEGER}
        AND type = #{ type,jdbcType=VARCHAR}
        AND mid = #{ mid,jdbcType=INTEGER}
        AND date = curdate();
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.UserRecord" >
    insert into user_record (id, user_id, type, 
      mid, score, date , month)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{mid,jdbcType=INTEGER},#{score,jdbcType=INTEGER}, curdate() , #{month,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.UserRecord" >
    insert into user_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="mid != null" >
        mid,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.UserRecord" >
    update user_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="mid != null" >
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.UserRecord" >
    update user_record
    set user_id = #{userId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      mid = #{mid,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getUserRecordCount" resultType="int">
        SELECT count(*) FROM user_record where user_id = #{userId,jdbcType=VARCHAR} and type="video";
    </select>

    <select id="getUserDoneClassRecord" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT * FROM user_record where user_id = #{userId,jdbcType=VARCHAR} and type="video" group by mid;
    </select>
    <select id="getUserExamCount" resultType="int" parameterType="java.lang.String">
        SELECT count(*) FROM user_record where user_id = #{userId,jdbcType=VARCHAR} and type="exam"
    </select>
</mapper>