<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miniclass.dao.UserBasicDao">
  <resultMap id="BaseResultMap" type="com.miniclass.entity.UserBasic">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_nname" jdbcType="VARCHAR" property="userNname" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="regist_time" jdbcType="TIMESTAMP" property="registTime" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="county" jdbcType="VARCHAR" property="county" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, user_id, user_nname, user_type, password, regist_time, province, city, county, 
    location, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_basic
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_basic
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.UserBasic">
    insert into user_basic (Id, user_id, user_nname, 
      user_type, password, regist_time, 
      province, city, county, 
      location, status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{userNname,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{registTime,jdbcType=TIMESTAMP}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.UserBasic">
    insert into user_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNname != null">
        user_nname,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="registTime != null">
        regist_time,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="county != null">
        county,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userNname != null">
        #{userNname,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null">
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.UserBasic">
    update user_basic
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userNname != null">
        user_nname = #{userNname,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null">
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null">
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.UserBasic">
    update user_basic
    set user_id = #{userId,jdbcType=VARCHAR},
      user_nname = #{userNname,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserId" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where user_id = #{userId,jdbcType=VARCHAR};
  </select>
  <select id="selectUserNname" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where user_nname = #{userNname,jdbcType=VARCHAR}
  </select>
  <select id="selectUserPassword" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectUseBlackList" parameterType="java.lang.String" resultType="Integer">
    SELECT status from user_basic where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="getUserById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM user_basic where user_id = #{userId,jdbcType=VARCHAR};
  </select>


</mapper>