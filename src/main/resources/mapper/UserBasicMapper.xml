<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miniclass.dao.UserBasicDao" >
  <resultMap id="BaseResultMap" type="com.miniclass.entity.UserBasic" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_nname" property="userNname" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, user_id, user_nname, real_name, email, user_type, password, regist_time, province, 
    city, county, location, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_basic
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_basic
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.UserBasic" >
    insert into user_basic (Id, user_id, user_nname, 
      real_name, email, user_type, 
      password, regist_time, province, 
      city, county, location, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{userNname,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{registTime,jdbcType=TIMESTAMP}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.UserBasic" >
    insert into user_basic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userNname != null" >
        user_nname,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="county != null" >
        county,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userNname != null" >
        #{userNname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.UserBasic" >
    update user_basic
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userNname != null" >
        user_nname = #{userNname,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.UserBasic" >
    update user_basic
    set user_id = #{userId,jdbcType=VARCHAR},
      user_nname = #{userNname,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=TIMESTAMP},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserId" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where user_id = #{userId,jdbcType=VARCHAR};
  </select>
  <select id="selectUserNname" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where user_nname = #{userNname,jdbcType=VARCHAR}
  </select>
  <select id="selectUserPassword" parameterType="java.lang.String" resultType="Integer">
    select count(*) from user_basic where password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectUseBlackList" parameterType="java.lang.String" resultType="Integer">
    SELECT status from user_basic where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="getUserById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM user_basic where user_id = #{userId,jdbcType=VARCHAR};
  </select>
</mapper>