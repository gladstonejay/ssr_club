<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miniclass.dao.UserScoreRankDao">
  <resultMap id="BaseResultMap" type="com.miniclass.entity.UserScoreRank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="season" jdbcType="INTEGER" property="season" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, year, season, month, score, total_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_score_rank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_score_rank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.UserScoreRank">
    insert into user_score_rank (id, user_id, year, 
      season, month, score, 
      total_score)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, 
      #{season,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{totalScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.UserScoreRank">
    insert into user_score_rank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="season != null">
        season,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="season != null">
        #{season,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.UserScoreRank">
    update user_score_rank
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="season != null">
        season = #{season,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.UserScoreRank">
    update user_score_rank
    set user_id = #{userId,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      season = #{season,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      total_score = #{totalScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserRecordCountByUserId" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM user_score_rank
    WHERE user_id=#{userId}
  </select>

  <select id="getUserRecordByUserId" resultMap="BaseResultMap">
    SELECT * FROM user_score_rank
    WHERE user_id=#{userId}
  </select>
</mapper>