<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miniclass.dao.ContentDao">
  <resultMap id="BaseResultMap" type="com.miniclass.entity.Content">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="item" jdbcType="INTEGER" property="item" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="season" jdbcType="INTEGER" property="season" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sub_title" jdbcType="VARCHAR" property="subTitle" />
    <result column="image_name" jdbcType="VARCHAR" property="imageName" />
    <result column="small_image_name" jdbcType="VARCHAR" property="smallImageName" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, item, create_time, year, season, month, type, title, sub_title, image_name, small_image_name, 
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from content
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.miniclass.entity.Content">
    insert into content (id, item, create_time, 
      year, season, month, 
      type, title, sub_title, 
      image_name, small_image_name, status
      )
    values (#{id,jdbcType=INTEGER}, #{item,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{year,jdbcType=INTEGER}, #{season,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{subTitle,jdbcType=VARCHAR}, 
      #{imageName,jdbcType=VARCHAR}, #{smallImageName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.miniclass.entity.Content">
    insert into content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="season != null">
        season,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subTitle != null">
        sub_title,
      </if>
      <if test="imageName != null">
        image_name,
      </if>
      <if test="smallImageName != null">
        small_image_name,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="item != null">
        #{item,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="season != null">
        #{season,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="smallImageName != null">
        #{smallImageName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.miniclass.entity.Content">
    update content
    <set>
      <if test="item != null">
        item = #{item,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="season != null">
        season = #{season,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        sub_title = #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        image_name = #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="smallImageName != null">
        small_image_name = #{smallImageName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miniclass.entity.Content">
    update content
    set item = #{item,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      season = #{season,jdbcType=INTEGER},
      month = #{month,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      sub_title = #{subTitle,jdbcType=VARCHAR},
      image_name = #{imageName,jdbcType=VARCHAR},
      small_image_name = #{smallImageName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getContentByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * from content
    WHERE type= #{type,jdbcType=INTEGER}
    ORDER BY id DESC ;
  </select>

  <select id="getContentByTypeAndWord"  resultMap="BaseResultMap">
    SELECT * from content
    WHERE type= #{type}
    AND title LIKE CONCAT('%',#{word},'%')
    ORDER BY id DESC ;
  </select>

  <select id="getContentByTypeAndItem" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * from content
    WHERE type= #{type}
    AND item=#{item}
    ORDER BY id DESC ;
  </select>
</mapper>